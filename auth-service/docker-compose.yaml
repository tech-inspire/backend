x-auth-service-template: &auth-service-template
  env_file:
    - .env
  build: . # use Dockerfile in the root of the repository
  depends_on:
    auth-postgres:
      condition: service_healthy
    auth-redis:
      condition: service_healthy
  environment: &auth-service-environment
    POSTGRES_DSN: postgres://auth_test_user:auth_test_pass@auth-postgres:5432/postgres?sslmode=disable
    REDIS_DSN: redis://:auth_redis_pass@auth-redis:6379
    SERVER_ADDRESS: 0.0.0.0:5080
    SERVER_METRICS_ADDRESS: 0.0.0.0:5082
  volumes:
    - ./keys:/keys

services:
  auth-postgres:
    image: postgres:17.2
    environment:
      POSTGRES_USER: auth_test_user
      POSTGRES_PASSWORD: auth_test_pass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - '5063:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data

  auth-redis:
    image: redis:7.4.0
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_pass", "ping"]
      interval: 1s
    ports:
      - '5064:6379'
    command: redis-server --requirepass auth_redis_pass
    volumes:
      - redis_data:/data

  auth-service-1:
    <<: *auth-service-template
    ports:
      - '5070:5080'
      - '5072:5082'
    environment:
      <<: *auth-service-environment
      APPLY_MIGRATIONS: true

  auth-service-2:
    <<: *auth-service-template
    ports:
      - '5080:5080'
      - '5082:5082'
    environment:
      <<: *auth-service-environment


  auth-service-3:
    <<: *auth-service-template
    ports:
      - '5090:5080'
      - '5092:5082'
    environment:
      <<: *auth-service-environment

volumes:
  pg_data:
  redis_data:
